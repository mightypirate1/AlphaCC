services:
  frontend:
    image: alphacc/webapp
    build:
      dockerfile: Dockerfile.webapp
      target: webapp
    depends_on:
      - backend
    env_file:
      - .env.docker
    ports:
      - '8080:80'

  backend:
    image: alphacc/backend
    build:
      dockerfile: Dockerfile.webapp
      target: backend
    depends_on:
      keydb-webapp:
        condition: service_healthy
    env_file:
      - .env.docker
    environment:
      - REDIS_HOST_MAIN=keydb-webapp
    volumes:
      - models:/mnt/models:rw
    ports:
      - '8000:8000'

  keydb-webapp:
    image: eqalpha/keydb
    ports:
      - '6377:6379'
    command: [
      "keydb-server",
      "--appendonly", "no",
      "--save", "",
      "--server-threads", "4",
      "--tcp-backlog", "511",
      "--tcp-keepalive", "60",
      "--client-output-buffer-limit", "normal", "0", "0", "0",
      "--client-output-buffer-limit", "pubsub", "32mb", "8mb", "60"
    ]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 15
      start_period: 5s

volumes:
  models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data/models"
