services:
  trainer:
    image: alpha-cc/training
    build:
      dockerfile: Dockerfile
      target: training
    depends_on:
      - redis
    volumes:
      - local:/mnt:rw
    env_file:
      - .env.docker
    command: [
      "alpha-cc-trainer",
      "--run-id=dbg-100-dirichlet-0.25-less-await",
      "--size=5",
      "--n-train-samples=2000",
      "--epochs-per-update=10",
      "--policy-weight=1.0",
      "--value-weight=1.0",
      "--batch-size=64",
      "--lr=1e-4",
    ]

  worker:
    image: alpha-cc/training
    depends_on:
      - trainer
    env_file:
      - .env.docker
    scale: 4
    command: [
      "alpha-cc-worker",
      "--size=5",
      "--n-rollouts=100",
      "--rollout-depth=100",
      "--max-game-length=200",
      "--dirichlet-noise-weight=0.25",
    ]
    
  nn_service:
    image: alpha-cc/training
    depends_on:
      - trainer
    env_file:
      - .env.docker
    command: [
      "alpha-cc-nn-service",
      "--size=5",
    ]

  tensorboard:
    image: tensorflow/tensorflow
    network_mode: host
    depends_on:
      - trainer
    volumes:
      - local:/mnt:ro

  redis:
    image: redislabs/redismod
    ports:
      - '6379:6379'

volumes:
  local:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data"
